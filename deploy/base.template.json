{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "Subnets": {
            "Type":  "String",
            "Description": "Subnet IDs as a list of strings."
        },
        "VpcId": {
            "Type": "String",
            "Default": "vpc-bcd146d8",
            "Description": "The VPC ID of the VPC this stack should be deployed."
        },
        "DomainName": {
            "Type": "String",
            "Description": "The root domain for the deployment e.g. engage.cx or ecxdev.com. Eventually we can make this a mapping in the cloudformation template between env (e.g. dev) and domain (e.g. ecxdev.com)"
        },
        "Region": {
            "Type": "String",
            "Description": "AWS region to deploy to."
        },
        "SSLCertificateId": {
            "Type": "String",
            "Description": "AWS ARN for the SSL Certificate. See https://console.aws.amazon.com/acm/home"
        },
        "DeploymentAgentIdentifier": {
            "Type": "String",
            "Description": "Short personal identifier token for who ran this deployment (e.g. dfraser) For production deployments this should always be 'sys'."
        },
        "Release": {
            "Type": "String",
            "Default": "r8u4",
            "Description": "Release abbreviation"
        },
        "Build": {
            "Type": "String",
            "Default": "build3",
            "Description": "Build version string to differentiate sub-releases"
        },
        "ProductName": {
            "Type": "String",
            "Default": "wifiauth",
            "Description": "The name of the product lowercase. e.g. wifiadapter. Note that this value will be used as part of the subdomain for this product."
        },
        "ProductCode": {
            "Type": "String",
            "Default": "wifiat",
            "Description": "Short-hand abbreviation for the product name. Used for namespacing."
        },
        "LocalURL":{
            "Type": "String",
            "Default": "http://wifiauth.engage.cx/wa/",
            "Description": "The url where the wifi-auth will be hosted from"
        },
        "LocalPath":{
            "Type":"String",
            "Default": "",
            "Description": "HTTP path for the wifi-auth"
        },
        "ServiceHost":{
            "Type":"String",
            "Default": "int-svrt1.ecxint.internal",
            "Description": "The URL of the Event Processing host"
        },
        "ServicePort":{
            "Type": "Number",
            "Default": 6000
        },
        "DatabaseName": {
            "Type": "String",
            "Default": "ecxadmin",
            "Description": "The database containing WIFIAUTH_* tables for this tenant."
        },
        "DatabaseUser": {
            "Type": "String",
            "Default": "ecxadmin"
        },
        "DatabasePassword": {
            "Type": "String",
            "NoEcho": true
        },
        "DatabaseHost": {
            "Type": "String",
            "Default": "int03.mysql.ecxdev.com"
        },
        "DatabasePort": {
            "Type": "Number",
            "Default": "3306",
            "MinValue": 0
        },
        "DatabaseAcquireTimeout": {
            "Type": "Number",
            "Default": "10000",
            "MinValue": 0,
            "Description": "See MySQL documentation."
        },
        "DatabaseWaitForConnections": {
            "Type": "String",
            "Default": "true",
            "Description": "See MySQL documentation."
        },
        "DatabaseConnectionLimit": {
            "Type": "Number",
            "Default": "3",
            "MinValue": 0,
            "Description": "See MySQL documentation."
        },
        "DatabaseQueueLimit": {
            "Type": "Number",
            "Default": "0",
            "MinValue": 0,
            "Description": "See MySQL documentation."
        },
        "DatabaseMultipleStatements": {
            "Type": "String",
            "Default": "false",
            "Description": "See MySQL documentation."
        },
        "DatabaseTimezone": {
            "Type": "String",
            "Default": "UTC",
            "Description": "See MySQL documentation."
        },
        "EcxEventProcessingServiceHost": {
            "Type": "String",
            "Default": "int-svrt1.ecxdev.com",
            "Description": "The internal hostname of the rt server for the event processing service. E.g. int-svrt1.ecxdev.com"
        },
        "EcxEventProcessingServicePort": {
            "Type": "Number",
            "Default": "80",
            "MinValue": 0,
            "Description": "The port of the event processing service is listening on (probably 80)"
        },
        "LoggingFormat":{
            "Type": "String",
            "Default": "combined",
            "Description": "Format of Winston logging for the server"
        },
        "LoggingTransportFilename": {
            "Type": "String",
            "Default": "/tmp/log.log",
            "Description": "The file path of the log file"
        },
        "LoggingTransportLevel": {
            "Type": "String",
            "Default": "debug",
            "Description": "The standard logging level of the winston log"
        },
        "LoggingTransportHandleExceptions": {
            "Type": "String",
            "Default": "true",
            "Description": "Boolean denoting if the log should handle exception"
        },
        "LoggingTransportJson": {
            "Type": "String",
            "Default": "false",
            "Description": "Boolean denoting if the transport should report in json"
        },
        "LoggingTransportMaxsize": {
            "Type": "Number",
            "Default": 5242880,
            "Description": "Maximum size the transport can be"
        },
        "LoggingTransportColorize": {
            "Type": "String",
            "Default": "false",
            "Description": "Boolean denoting if the log should be colored"
        },
        "TenantId": {
            "Type": "String",
            "Default": "miami",
            "Description": "The tenant for whom the WifiAuth is being deployed"
        },
        "LoggingLevel": {
            "Type": "String",
            "Default": "warning",
            "AllowedValues": [
                "error",
                "warning",
                "info",
                "verbose",
                "debug"
            ],
            "Description": "Product logging level."
        },
        "DeploymentMode": {
            "Type": "String",
            "Default": "dev",
            "AllowedValues": [
                "prod",
                "int",
                "dev",
                "qa",
                "lab"
            ],
            "Description": "The purpose for this deployment."
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": ""
                    },
                    "Parameters": [
                        "TenantId",
                        "ProductName",
                        "ProductCode",
                        "Release",
                        "Build",
                        "LoggingLevel",
                        "DeploymentMode",
                        "Region",
                        "DeploymentAgentIdentifier"
                    ]
                },
                {
                    "Label": {
                        "default": "Network"
                    },
                    "Parameters": [
                        "VpcId",
                        "Subnets",
                        "DomainName"
                    ]
                },
                {
                    "Label": {
                        "default": "EcxAdmin Database Configuration"
                    },
                    "Parameters": [
                        "DatabaseName",
                        "DatabaseUser",
                        "DatabasePassword",
                        "DatabaseHost",
                        "DatabasePort",
                        "DatabaseAcquireTimeout",
                        "DatabaseWaitForConnections",
                        "DatabaseConnectionLimit",
                        "DatabaseQueueLimit",
                        "DatabaseMultipleStatements",
                        "DatabaseTimezone"
                    ]
                },
                {
                    "Label": {
                        "default": "Event Processing Service"
                    },
                    "Parameters": [
                        "EcxEventProcessingServiceHost",
                        "EcxEventProcessingServicePort"
                    ]
                }
            ],
            "ParameterLabels": {
                "Region": {
                    "default": "Region"
                },
                "ProductCode": {
                    "default": "Product Code"
                },
                "DeploymentAgentIdentifier": {
                    "default": "Deployment Agent Identifier"
                },
                "Build": {
                    "default": "Build Version"
                },
                "ScheduleExpression": {
                    "default": "Schedule Expression"
                },
                "Release": {
                    "default": "Release"
                },
                "ProductName": {
                    "default": "Product Name"
                },
                "Subnets": {
                    "default": "Subnets"
                },
                "DomainName": {
                    "default": "Domain Name"
                },
                "VpcId": {
                    "default": "VPC ID"
                },
                "CacheNodeType": {
                    "default": "Node Type"
                },
                "NumCacheNodes": {
                    "default": "Number of Nodes"
                },
                "CacheAutoMinorVersionUpgrade": {
                    "default": "Auto Minor Version Upgrades?"
                },
                "CachePreferredMaintenanceWindow": {
                    "default": "Preferred Maintenance Window"
                },
                "TenantId": {
                    "default": "Tenant ID"
                },
                "LoggingLevel": {
                    "default": "WifiAdapter Application Logging Level"
                },
                "DeploymentMode": {
                    "default": "Deployment Mode"
                },
                "DatabaseName": {
                    "default": "Database Name"
                },
                "DatabaseUser": {
                    "default": "Database User"
                },
                "DatabasePassword": {
                    "default": "Password"
                },
                "DatabaseHost": {
                    "default": "Host"
                },
                "DatabasePort": {
                    "default": "Port"
                },
                "DatabaseAcquireTimeout": {
                    "default": "AquireTimeout"
                },
                "DatabaseWaitForConnections": {
                    "default": "WaitForConnections"
                },
                "DatabaseConnectionLimit": {
                    "default": "ConnectionLimit"
                },
                "DatabaseQueueLimit": {
                    "default": "QueueLimit"
                },
                "DatabaseMultipleStatements": {
                    "default": "MultipleStatements"
                },
                "DatabaseTimezone": {
                    "default": "Timezone"
                },
                "EcxSiteServiceHost": {
                    "default": "Host"
                },
                "EcxSiteServicePort": {
                    "default": "Port"
                },
                "EcxEventProcessingServiceHost": {
                    "default": "Host"
                },
                "EcxEventProcessingServicePort": {
                    "default": "Port"
                },
                "ObsLogsLongTermStorageTransition": {
                    "default": "Transition"
                },
                "ObsLogsLongTermStorageExpiration": {
                    "default": "Expiration"
                },
                "ObsLogsIntervalInSeconds": {
                    "default": "Flush Buffer Interval"
                },
                "ObsLogsSizeInMBs": {
                    "default": "Max Buffer Size"
                },
                "ObsLogsCompressionFormat": {
                    "default": "Compression Format"
                }
            }
        }
    },
    "Resources": {

        "WifiAuthBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Fn::Join":  [ "-", [
                        "ecx",
                        {"Ref":"DeploymentAgentIdentifier"},
                        {"Ref":"DeploymentMode"},
                        "cfa",
                        {"Ref":"Region"}
                    ]]
                },
                "Tags": [
                    {"Key": "Region", "Value": { "Ref": "Region" }},
                    {"Key": "DeploymentAgentIdentifier", "Value": { "Ref": "DeploymentAgentIdentifier" }},
                    {"Key": "DeploymentMode", "Value": { "Ref": "DeploymentMode" }},
                    {"Key": "Product", "Value": {"Ref":"ProductName"}}
                ]
            },
            "DeletionPolicy": "Retain"
        },

        "WifiAuthSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable HTTP",
                "VpcId": {
                    "Ref": "VpcId"
                },
                "Tags": [
                    {"Key": "Tenant", "Value": { "Ref": "TenantId" }},
                    {"Key": "Region", "Value": { "Ref": "Region" }},
                    {"Key": "DeploymentAgentIdentifier", "Value": { "Ref": "DeploymentAgentIdentifier" }},
                    {"Key": "Release", "Value": { "Ref": "Release" }},
                    {"Key": "Build", "Value": { "Ref": "Build" }},
                    {"Key": "DeploymentMode", "Value": { "Ref": "DeploymentMode" }},
                    {"Key": "Product", "Value": {"Ref":"ProductName"}}
                ]
            }
        },

        "WifiAuthApplication": {
            "Type": "AWS::ElasticBeanstalk::Application",
            "Properties": {
                "Description": { "Fn::Join": [ " ", [ "Elastic BeanStalk environment for", {"Ref":"ProductName"} ] ] }
            }
        },

        "WifiAuthInstanceProfileRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier"
                ],
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "TenantId"
                            },
                            {
                                "Ref": "AWS::Region"
                            },
                            "WifiAuthInstanceProfileRole"
                        ]
                    ]
                }
            }
        },

        "WifiAuthInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "WifiAuthInstanceProfileRole"
                    }
                ]
            }
        },

        "WifiAuthConfigurationTemplate": {
            "Type": "AWS::ElasticBeanstalk::ConfigurationTemplate",
            "Properties": {
                "ApplicationName": {
                    "Ref":"WifiAuthApplication"
                },
                "OptionSettings": [
                    {
                        "Namespace": "aws:autoscaling:asg",
                        "OptionName": "MinSize",
                        "Value": "1"
                    },
                    {
                        "Namespace": "aws:autoscaling:asg",
                        "OptionName": "MaxSize",
                        "Value": "6"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:environment",
                        "OptionName": "EnvironmentType",
                        "Value": "LoadBalanced"
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "InstanceType",
                        "Value": "t1.micro"
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "IamInstanceProfile",
                        "Value": {
                            "Fn::GetAtt": [
                                "WifiAuthInstanceProfile",
                                "Arn"
                            ]
                        }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "SecurityGroups",
                        "Value": {
                            "Fn::GetAtt": [
                                "WifiAuthSecurityGroup",
                                "GroupId"
                            ]
                        }
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "VPCId",
                        "Value": {
                            "Ref": "VpcId"
                        }
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "Subnets",
                        "Value": {
                            "Ref": "Subnets"
                        }
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "ELBSubnets",
                        "Value": {
                            "Ref": "Subnets"
                        }
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "AssociatePublicIpAddress",
                        "Value": true
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "TenantId",
                        "Value": {
                            "Ref": "TenantId"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "DatabaseName",
                        "Value": {
                            "Ref": "DatabaseName"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "DatabaseUser",
                        "Value": {
                            "Ref": "DatabaseUser"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "DatabasePassword",
                        "Value": {
                            "Ref": "DatabasePassword"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "DatabaseHost",
                        "Value": {
                            "Ref": "DatabaseHost"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "DatabasePort",
                        "Value": {
                            "Ref": "DatabasePort"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "DatabaseAcquireTimeout",
                        "Value": {
                            "Ref": "DatabaseAcquireTimeout"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "DatabaseWaitForConnections",
                        "Value": {
                            "Ref": "DatabaseWaitForConnections"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "DatabaseConnectionLimit",
                        "Value": {
                            "Ref": "DatabaseConnectionLimit"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "DatabaseQueueLimit",
                        "Value": {
                            "Ref": "DatabaseQueueLimit"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "DatabaseMultipleStatements",
                        "Value": {
                            "Ref": "DatabaseMultipleStatements"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "DatabaseTimezone",
                        "Value": {
                            "Ref": "DatabaseTimezone"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "LoggingFormat",
                        "Value": {
                            "Ref": "LoggingFormat"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "LoggingTransportFilename",
                        "Value": {
                            "Ref": "LoggingTransportFilename"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "LoggingTransportLevel",
                        "Value": {
                            "Ref": "LoggingTransportLevel"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "LoggingTransportHandleExceptions",
                        "Value": {
                            "Ref": "LoggingTransportHandleExceptions"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "LoggingTransportJson",
                        "Value": {
                            "Ref": "LoggingTransportJson"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "LoggingTransportMaxsize",
                        "Value": {
                            "Ref": "LoggingTransportMaxsize"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "LoggingTransportColorize",
                        "Value": {
                            "Ref": "LoggingTransportColorize"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "EcxEventProcessingServiceHost",
                        "Value": {
                            "Ref": "EcxEventProcessingServiceHost"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "EcxEventProcessingServicePort",
                        "Value": {
                            "Ref": "EcxEventProcessingServicePort"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "ServicePort",
                        "Value": {
                            "Ref": "ServicePort"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "NODE_ENV",
                        "Value": "aws-development"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "LocalURL",
                        "Value": {
                            "Ref": "LocalURL"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "LocalPath",
                        "Value": {
                            "Ref": "LocalPath"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "ServiceHost",
                        "Value":{
                            "Ref": "ServiceHost"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "ProductName",
                        "Value": {
                            "Ref": "ProductName"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "DomainName",
                        "Value": {
                            "Ref": "DomainName"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "SSLCertificateId",
                        "Value": {
                            "Ref": "SSLCertificateId"
                        }
                    }
                ],
                "SolutionStackName": "64bit Amazon Linux 2016.09 v4.0.0 running Node.js"
            }
        },

        "WifiAuthEnvironment": {
            "Type": "AWS::ElasticBeanstalk::Environment",
            "Properties": {
                "ApplicationName": {
                    "Ref": "WifiAuthApplication"
                },
                "TemplateName": {
                    "Ref": "WifiAuthConfigurationTemplate"
                },
                "Tags": [
                    {
                        "Key": "Tenant",
                        "Value": {
                            "Ref": "TenantId"
                        }
                    },
                    {
                        "Key": "Region",
                        "Value": {
                            "Ref": "Region"
                        }
                    },
                    {
                        "Key": "DeploymentAgentIdentifier",
                        "Value": {
                            "Ref": "DeploymentAgentIdentifier"
                        }
                    },
                    {
                        "Key": "Release",
                        "Value": {
                            "Ref": "Release"
                        }
                    },
                    {
                        "Key": "Build",
                        "Value": {
                            "Ref": "Build"
                        }
                    },
                    {
                        "Key": "DeploymentMode",
                        "Value": {
                            "Ref": "DeploymentMode"
                        }
                    },
                    {
                        "Key": "Product",
                        "Value": {
                            "Ref": "ProductName"
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {}
}